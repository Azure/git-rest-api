trigger:
  - master

pr: none

stages:
  # - stage: Build_Docker
  #   jobs:
  #     - job: Build_Docker
  #       displayName: Build and publish to hub.docker.com
  #       pool:
  #         name: AzurePipelines-EO
  #         vmImage: "AzurePipelinesUbuntu20.04compliant"
  #       variables:
  #         build_counter: $[counter('versioncounter', 1)]
  #       steps:
  #         - script: |
  #             version=$(npm run -s get-version)
  #             echo "Current package version is $version"
  #             echo "Current build number is $(build_counter)"

  #             echo "##vso[build.updatebuildnumber]$version.$(build_counter)"
  #             echo "##vso[task.setvariable variable=NpmVersion]$version"
  #           displayName: Resolve package version
  #         - task: Docker@2
  #           displayName: "Build azuredevx/git-rest-api"
  #           inputs:
  #             containerRegistry: "git-rest-api docker"
  #             repository: "azuredevx/git-rest-api"
  #             tags: |
  #               $(Build.BuildNumber)
  #               $(NpmVersion)-latest
  #               latest

  - stage: build_sdks
    displayName: Build SDKs
    dependsOn: []
    jobs:
      - job: build
        pool:
          name: AzurePipelines-EO
          vmImage: "AzurePipelinesUbuntu20.04compliant"
        steps:
          - script: npm ci
            displayName: Install
          - script: npm run sdk:gen
            displayName: Generate SDKs
          - script: npm pack
            workingDirectory: sdk/out/typescript
            displayName: Pack
          - task: CopyFiles@2
            displayName: "Copy Files to: drop"
            inputs:
              sourceFolder: ./sdk/out/typescript
              contents: "*.tgz"
              targetFolder: $(Build.ArtifactStagingDirectory)/drop
          - task: PublishPipelineArtifact@0
            inputs:
              artifactName: "drop"
              targetPath: $(Build.ArtifactStagingDirectory)/drop
